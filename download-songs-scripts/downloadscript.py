# -*- coding: utf-8 -*-
# -*- coding: utf-8 -*-
"""DownloadScript.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SzjgwqAVkb0rDosYaZpTjl1XNbWfqhfm
"""
import deezer
from pydeezer import Deezer
from pydeezer import Downloader
from pydeezer.constants import track_formats
import time
import shutil
import os
import random
import smtplib
from email.mime.text import MIMEText

client = deezer.Client()
arl = "myarl"
deezeer = Deezer(arl=arl)
user_info = deezeer.user

download_dir = "data/songs"

def download_song(song_name, author_name, wanted_name, counter=None):
  tracks = client.search(song_name) #poner la lista de canciones en lugar de rapgod
  print("searching:", song_name)
  print(tracks.total)
    
  for t in tracks:
    #print(track["name"])
    tittle = t.title.lower() #se busca el titulo de la cancion
    track_artist = t.artist.name.lower() #se busca al autor
    if track_artist == author_name.lower(): #se revisa si el titulo de la cancion y el nombre del autor coinciden
      ##se procede a descargar la cancion
      track_id = t.id
      start = time.time()
      track = deezeer.get_track(track_id)
      track["download"](download_dir, quality=track_formats.FLAC,lyrics=False)#aqui se realiza la descarga
      end = time.time()
      print("time used:",end-start)
      song_name = t.title
      filename = "data/songs/"+song_name+".mp3"
      filename_l = "data/songs/"+song_name+".lrc"

      try:
        os.rename(filename,"data/songs/"+wanted_name+".mp3")
        os.rename(filename_l,"data/songs/"+wanted_name+".lrc")
      except:
        pass
      
      break


def save_counter(counter):
  with open('counter.txt', 'w') as f:
    f.write(str(counter))
    
def save_exception(counter):
  with open('exception.txt', 'a') as f:
    f.write(str(counter)+'\n')

def restart_conn():
  client = None
  deezer = None
  client = deezer.Client()
  deezeer = Deezer(arl=arl)


def send_email():
  recipients = ["marco.f.vasquez1@gmail.com", "zonitidus@gmail.com","alejo.garca11@gmail.com"]
  sender = "macroxx120@gmail.com"
  password = "quddmqbefrcrcntc"
  msg = MIMEText("el script ha tenido un problema en su ejecucion")
  msg['Subject'] = "Script ejecutandose en el servidor"
  msg['From'] = sender
  msg['To'] = ', '.join(recipients)
  smtp_server = smtplib.SMTP_SSL('smtp.gmail.com', 465)
  smtp_server.login(sender, password)
  smtp_server.sendmail(sender, recipients, msg.as_string())
  smtp_server.quit()

import pandas as pd

pandas_path='EnEsSongsDataset.csv'
dataset = pd.read_csv(pandas_path)
dataset = dataset.iloc[0:,:]

counter = 0


for song in range(len(dataset)):
  done=False
  print("current song:",counter)
  r = dataset.iloc[song]
  print(r['name'],r['artist'])
  tries = 0
  while(done==False and tries<5):
    try:
      tries = tries+1
      time.sleep(random.uniform(3.0,7.0))
      download_song(r['name'],r['artist'],r['id'])
      done=True
    except Exception as e:
      print(e)
      pass
  
  if done==False:
    save_exception(counter)
    send_email()
  
  counter = counter+1
  save_counter(counter)